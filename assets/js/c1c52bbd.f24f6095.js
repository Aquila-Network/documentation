"use strict";(self.webpackChunkaquila=self.webpackChunkaquila||[]).push([[919],{3905:function(t,e,o){o.d(e,{Zo:function(){return s},kt:function(){return f}});var r=o(7294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function a(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,r)}return o}function i(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?a(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function c(t,e){if(null==t)return{};var o,r,n=function(t,e){if(null==t)return{};var o,r,n={},a=Object.keys(t);for(r=0;r<a.length;r++)o=a[r],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)o=a[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var l=r.createContext({}),u=function(t){var e=r.useContext(l),o=e;return t&&(o="function"==typeof t?t(e):i(i({},e),t)),o},s=function(t){var e=u(t.components);return r.createElement(l.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var o=t.components,n=t.mdxType,a=t.originalType,l=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),d=u(o),f=n,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return o?r.createElement(m,i(i({ref:e},s),{},{components:o})):r.createElement(m,i({ref:e},s))}));function f(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var a=o.length,i=new Array(a);i[0]=d;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:n,i[1]=c;for(var u=2;u<a;u++)i[u]=o[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6133:function(t,e,o){o.r(e),o.d(e,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return s},default:function(){return d}});var r=o(7462),n=o(3366),a=(o(7294),o(3905)),i=["components"],c={sidebar_position:1},l="Intro: Aquila Port",u={unversionedId:"port/Aquila Port",id:"port/Aquila Port",isDocsHomePage:!1,title:"Intro: Aquila Port",description:"Aquila Port is the data transport layer for Aquila Network. Its prime function is to handle continuous replication of data between Aquila DB nodes in a network. Aquila Port is also capable of discovering databases and documents across the network automatically.",source:"@site/docs/port/Aquila Port.md",sourceDirName:"port",slug:"/port/Aquila Port",permalink:"/docs/port/Aquila Port",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/port/Aquila Port.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Node JS",permalink:"/docs/hub/apis/javascript"},next:{title:"Eventual consistency of events",permalink:"/docs/port/concepts/Eventual consistency of events"}},s=[{value:"Aquila Replication Protocol",id:"aquila-replication-protocol",children:[],level:2}],p={toc:s};function d(t){var e=t.components,o=(0,n.Z)(t,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"intro-aquila-port"},"Intro: Aquila Port"),(0,a.kt)("p",null,"Aquila Port is the data transport layer for Aquila Network. Its prime function is to handle continuous replication of data between Aquila DB nodes in a network. Aquila Port is also capable of discovering databases and documents across the network automatically."),(0,a.kt)("h2",{id:"aquila-replication-protocol"},"Aquila Replication Protocol"),(0,a.kt)("p",null,"Aquila Replication Protocol is not built from scratch. It is a modified version of infamous ",(0,a.kt)("a",{parentName:"p",href:"https://docs.couchdb.org/en/stable/replication/protocol.html"},"Couch Replication Protocol")," adopted for content addressing and custom conflict resolution. "),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Current version of Aquila Replication Protocol is minimal and experimental as a proof of concept.  Breaking changes may apply in future versions to incorporate authentication, authorization and content addressed redundancy control.")))}d.isMDXComponent=!0}}]);